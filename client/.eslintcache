[{"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js":"1","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js":"2","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js":"3","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeCard.js":"4","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeEntry.js":"5","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/Editable.js":"6"},{"size":484,"mtime":1609027700211,"results":"7","hashOfConfig":"8"},{"size":10215,"mtime":1612322425260,"results":"9","hashOfConfig":"8"},{"size":1873,"mtime":1611006847951,"results":"10","hashOfConfig":"8"},{"size":11226,"mtime":1612321345502,"results":"11","hashOfConfig":"8"},{"size":5083,"mtime":1610993357095,"results":"12","hashOfConfig":"8"},{"size":1212,"mtime":1610673543464,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yhrrie",{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js",[],["29","30"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js",["31","32","33","34","35","36","37","38"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js",[],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeCard.js",["39","40","41","42","43"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeEntry.js",["44"],"import React, { useState, useRef } from \"react\";\nimport Editable from \"./Editable\";\n// import firebase from \"../utils/firebase\";\n\nconst Card = ({\n  recipe,\n  unique_id,\n  url,\n  setRecipe,\n  setIsOverlay,\n  setUrl,\n  handleCreate,\n  handleDelete,\n}) => {\n  const [title, setTitle] = useState(recipe.title);\n  const [imgSrc, setImgSrc] = useState(recipe.img_src);\n  const [description, setDescription] = useState(recipe.description);\n  const [author, setAuthor] = useState(recipe.author);\n  const [tags, setTags] = useState(recipe.tags);\n  const [allNotes, setAllNotes] = useState(\"\");\n  const [hasMade, setHasMade] = useState(false);\n  const inputRef = useRef();\n\n  const createEntry = () => {\n    let notes;\n\n    if (allNotes.length > 0) {\n      notes = [allNotes.trim()];\n    } else {\n      notes = [];\n    }\n\n    handleCreate({\n      unique_id: unique_id,\n      title: title,\n      url: url,\n      author: author,\n      img_src: imgSrc,\n      description: description,\n      has_made: hasMade,\n      notes: notes,\n      rating: 0,\n      tags: tags,\n    });\n    setRecipe({});\n    setIsOverlay(false);\n    handleDelete(recipe.unique_id, \"crawledrecipe\");\n    setUrl(\"\");\n  };\n\n  const splitTags = (tags) => {\n    let split = tags.trim().split(\",\");\n    setTags(split);\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-top\">\n        {imgSrc ? (\n          <img src={imgSrc} />\n        ) : (\n          <Editable\n            text={imgSrc}\n            placeholder='Right click on image, and click \"copy image address\". Paste address here.'\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"image source\"\n              placeholder='Right click on image, and click \"copy image address\". Paste address here.'\n              rows=\"5\"\n              value={imgSrc}\n              onChange={(e) => setImgSrc(e.target.value)}\n            />\n          </Editable>\n        )}\n      </div>\n      <div className=\"card-bottom\">\n        <div className=\"title-wrapper\">\n          <h3>Title:</h3>\n          <div>\n            <label htmlFor=\"has-made\">Has Made:</label>\n            <input\n              type=\"checkbox\"\n              id=\"has-made\"\n              name=\"has-made\"\n              value={hasMade}\n              onClick={() => setHasMade(!hasMade)}\n            />\n          </div>\n        </div>\n        <Editable\n          text={title}\n          placeholder=\"Click Here to Add Recipe Title\"\n          childRef={inputRef}\n          type=\"textarea\"\n        >\n          <textarea\n            ref={inputRef}\n            name=\"title\"\n            placeholder=\"Click Here to Add Recipe Title\"\n            rows=\"5\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Editable>\n        <h3>Author:</h3>\n        <Editable\n          text={author}\n          placeholder=\"Click Here to Add Recipe Author\"\n          childRef={inputRef}\n          type=\"textarea\"\n        >\n          <textarea\n            ref={inputRef}\n            name=\"author\"\n            placeholder=\"Click Here to Add Recipe Author\"\n            rows=\"5\"\n            value={author}\n            onChange={(e) => setAuthor(e.target.value)}\n          />\n        </Editable>\n        <div className=\"description\">\n          <h3>Description:</h3>\n          <Editable\n            text={description}\n            placeholder=\"Click Here to Add Recipe Description\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"description\"\n              placeholder=\"Click Here to Add Recipe Description\"\n              rows=\"5\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div>\n          <h3>Tagged As:</h3>\n          <Editable\n            text={tags.join(\",\")}\n            placeholder=\"Click Here to Add Recipe Tags\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"tags\"\n              placeholder=\"Enter ',' separated tags here\"\n              rows=\"5\"\n              value={tags.join(\",\")}\n              onChange={(e) => splitTags(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div>\n          <h3>Additional Notes:</h3>\n          <Editable\n            text={allNotes}\n            placeholder=\"Click Here to Add Additional Notes\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"notes\"\n              placeholder=\"Add additional notes here.\"\n              rows=\"10\"\n              value={allNotes}\n              onChange={(e) => setAllNotes(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div className=\"link\">\n          <button onClick={createEntry}>Create Entry</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/Editable.js",[],["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":10,"column":10,"nodeType":"53","messageId":"54","endLine":10,"endColumn":24},{"ruleId":"51","severity":1,"message":"55","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":16},{"ruleId":"56","severity":1,"message":"57","line":28,"column":6,"nodeType":"58","endLine":28,"endColumn":14,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"60","line":71,"column":11,"nodeType":"53","messageId":"54","endLine":71,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":98,"column":11,"nodeType":"53","messageId":"54","endLine":98,"endColumn":19},{"ruleId":"56","severity":1,"message":"61","line":167,"column":6,"nodeType":"58","endLine":167,"endColumn":13,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":176,"column":18,"nodeType":"65","messageId":"66","endLine":176,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":226,"column":23,"nodeType":"69","endLine":226,"endColumn":67},{"ruleId":"51","severity":1,"message":"70","line":6,"column":13,"nodeType":"53","messageId":"54","endLine":6,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":258,"column":9,"nodeType":"69","endLine":261,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":317,"column":27,"nodeType":"73","endLine":317,"endColumn":42},{"ruleId":"67","severity":1,"message":"68","line":336,"column":19,"nodeType":"69","endLine":340,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":361,"column":41,"nodeType":"73","endLine":361,"endColumn":56},{"ruleId":"67","severity":1,"message":"68","line":60,"column":11,"nodeType":"69","endLine":60,"endColumn":31},{"ruleId":"47","replacedBy":"74"},{"ruleId":"49","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'crawlingStatus' is assigned a value but never used.","Identifier","unusedVar","'taskID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiStateReferences'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allRecipes'. Either include it or remove the dependency array.",["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'api' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [apiStateReferences, sortBy]",{"range":"84","text":"85"},"Update the dependencies array to be: [allRecipes, query]",{"range":"86","text":"87"},[1004,1012],"[apiStateReferences, sortBy]",[4751,4758],"[allRecipes, query]"]