[{"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js":"1","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js":"2","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js":"3","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeCard.js":"4","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeEntry.js":"5","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/Editable.js":"6"},{"size":484,"mtime":1609027700211,"results":"7","hashOfConfig":"8"},{"size":8002,"mtime":1610322503472,"results":"9","hashOfConfig":"8"},{"size":1150,"mtime":1610322530542,"results":"10","hashOfConfig":"8"},{"size":12040,"mtime":1610322428773,"results":"11","hashOfConfig":"8"},{"size":4959,"mtime":1609986244136,"results":"12","hashOfConfig":"8"},{"size":1627,"mtime":1609816721699,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yhrrie",{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js",[],["28","29"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js",["30","31","32","33","34","35","36","37"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js",[],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeCard.js",["38","39","40","41","42"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/RecipeEntry.js",["43","44","45","46"],"import React, { useState, useRef } from 'react';\nimport Editable from \"./Editable\";\n// import firebase from \"../utils/firebase\";\n\nconst Card = ({ recipe, url, setRecipe, setIsOverlay, setUrl }) => {\n\n  const [title, setTitle] = useState(recipe.title);\n  const [imgSrc, setImgSrc] = useState(recipe.imgSrc);\n  const [description, setDescription] = useState(recipe.description);\n  const [author, setAuthor] = useState(recipe.author);\n  const [rating, setRating] = useState(0);\n  const [tags, setTags] = useState(recipe.tags);\n  const [allNotes, setAllNotes] = useState(\"\");\n  const [hasMade, setHasMade] = useState(false);\n  const inputRef = useRef();\n\n  const createEntry = () => {\n\n    let notes;\n\n    if (allNotes.length > 0) {\n      notes = allNotes.split(\"\\n\\n\")\n    } else {\n      notes = []\n    }\n\n    // firebase\n    //   .firestore()\n    //   .collection(\"recipes\")\n    //   .add({\n    //     title,\n    //     imgSrc,\n    //     author,\n    //     rating,\n    //     description,\n    //     timestamp: Date.now(),\n    //     tags,\n    //     hasMade,\n    //     notes,\n    //     url\n    //   })\n    setRecipe({})\n    setIsOverlay(false)\n    setUrl(\"\");\n  }\n\n  const splitTags = tags => {\n    let split = tags.split(\",\")\n    setTags(split)\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-top\">\n        {imgSrc ?\n          <img src={imgSrc} />\n          :\n          <Editable\n            text={imgSrc}\n            placeholder='Right click on image, and click \"copy image address\". Paste address here.'\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"image source\"\n              placeholder='Right click on image, and click \"copy image address\". Paste address here.'\n              rows=\"5\"\n              value={imgSrc}\n              onChange={e => setImgSrc(e.target.value)}\n            />\n          </Editable>\n        }\n      </div>\n      <div className=\"card-bottom\">\n        <div className=\"title-wrapper\">\n          <h3>Title:</h3>\n          <div>\n            <label htmlFor=\"has-made\">Has Made:</label>\n            <input type=\"checkbox\" id=\"has-made\" name=\"has-made\" value={hasMade} onClick={() => setHasMade(!hasMade)} />\n          </div>\n        </div>\n        <Editable\n          text={title}\n          placeholder=\"Click Here to Add Recipe Title\"\n          childRef={inputRef}\n          type=\"textarea\"\n        >\n          <textarea\n            ref={inputRef}\n            name=\"title\"\n            placeholder=\"Click Here to Add Recipe Title\"\n            rows=\"5\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </Editable>\n        <h3>Author:</h3>\n        <Editable\n          text={author}\n          placeholder=\"Click Here to Add Recipe Author\"\n          childRef={inputRef}\n          type=\"textarea\"\n        >\n          <textarea\n            ref={inputRef}\n            name=\"author\"\n            placeholder=\"Click Here to Add Recipe Author\"\n            rows=\"5\"\n            value={author}\n            onChange={e => setAuthor(e.target.value)}\n          />\n        </Editable>\n        <div className=\"description\">\n          <h3>Description:</h3>\n          <Editable\n            text={description}\n            placeholder=\"Click Here to Add Recipe Description\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"description\"\n              placeholder=\"Click Here to Add Recipe Description\"\n              rows=\"5\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div>\n          <h3>Tagged As:</h3>\n          <Editable\n            text={tags.join(\",\")}\n            placeholder=\"Click Here to Add Recipe Tags\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"tags\"\n              placeholder=\"Enter ',' separated tags here\"\n              rows=\"5\"\n              value={tags.join(\",\")}\n              onChange={e => splitTags(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div>\n          <h3>Additional Notes:</h3>\n          <Editable\n            text={allNotes}\n            placeholder=\"Click Here to Add Additional Notes\"\n            childRef={inputRef}\n            type=\"textarea\"\n          >\n            <textarea\n              ref={inputRef}\n              name=\"notes\"\n              placeholder=\"Add additional notes here.\"\n              rows=\"10\"\n              value={allNotes}\n              onChange={e => setAllNotes(e.target.value)}\n            />\n          </Editable>\n        </div>\n        <div className=\"link\">\n          <button onClick={createEntry} >Create Entry</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/Components/Editable.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":24},{"ruleId":"51","severity":1,"message":"55","line":13,"column":10,"nodeType":"53","messageId":"54","endLine":13,"endColumn":20},{"ruleId":"51","severity":1,"message":"56","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":16},{"ruleId":"51","severity":1,"message":"57","line":15,"column":10,"nodeType":"53","messageId":"54","endLine":15,"endColumn":18},{"ruleId":"51","severity":1,"message":"58","line":17,"column":20,"nodeType":"53","messageId":"54","endLine":17,"endColumn":31},{"ruleId":"51","severity":1,"message":"59","line":61,"column":11,"nodeType":"53","messageId":"54","endLine":61,"endColumn":19},{"ruleId":"51","severity":1,"message":"59","line":92,"column":11,"nodeType":"53","messageId":"54","endLine":92,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":156,"column":23,"nodeType":"62","endLine":156,"endColumn":94},{"ruleId":"51","severity":1,"message":"63","line":6,"column":13,"nodeType":"53","messageId":"54","endLine":6,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":271,"column":9,"nodeType":"62","endLine":274,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":331,"column":27,"nodeType":"66","endLine":331,"endColumn":42},{"ruleId":"60","severity":1,"message":"61","line":350,"column":19,"nodeType":"62","endLine":350,"endColumn":81},{"ruleId":"64","severity":1,"message":"65","line":371,"column":41,"nodeType":"66","endLine":371,"endColumn":56},{"ruleId":"51","severity":1,"message":"67","line":11,"column":10,"nodeType":"53","messageId":"54","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"68","line":11,"column":18,"nodeType":"53","messageId":"54","endLine":11,"endColumn":27},{"ruleId":"51","severity":1,"message":"69","line":24,"column":7,"nodeType":"53","messageId":"54","endLine":24,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":56,"column":11,"nodeType":"62","endLine":56,"endColumn":31},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'crawlingStatus' is assigned a value but never used.","Identifier","unusedVar","'allRecipes' is assigned a value but never used.","'taskID' is assigned a value but never used.","'uniqueID' is assigned a value but never used.","'setTagsList' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'api' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'rating' is assigned a value but never used.","'setRating' is assigned a value but never used.","'notes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]