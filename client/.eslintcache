[{"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js":"1","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js":"2","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js":"3"},{"size":484,"mtime":1609027700211,"results":"4","hashOfConfig":"5"},{"size":2342,"mtime":1609815897484,"results":"6","hashOfConfig":"5"},{"size":281,"mtime":1609816247481,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1yhrrie",{"filePath":"11","messages":"12","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/index.js",[],["16","17"],"/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/App.js",["18","19","20","21","22","23","24","25"],"import React, {useEffect, useState, useRef} from 'react';\nimport api from './utils/api';\n\nfunction App() {\n\n  const [url, setUrl] = useState('https://food52.com/recipes/84746-best-beef-goulash-recipe');\n  const [crawlingStatus, setCrawlingStatus] = useState(null);\n  const [data, setData] = useState(null);\n  const [taskID, setTaskID] = useState(null);\n  const [uniqueID, setUniqueID] = useState(null);\n  // const [statusInterval, setStatusInterval] = useState(1);\n  let statusInterval = 1;\n\n  useEffect(() => {\n    let data = api.getAllRecipes()\n    setData(data)\n  }, [])\n\n  async function startCrawl() {\n    if(!url) {\n      return false;\n    }\n    const response = await fetch('api/crawl/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({method: 'POST', url: url}) \n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data)\n        setTaskID(data.task_id)\n        setUniqueID(data.unique_id)\n        setCrawlingStatus(data.status)\n        statusInterval = setInterval(() => checkCrawlStatus(data.task_id, data.unique_id), 2000)\n      })\n      // .then(statusInterval = setInterval(checkCrawlStatus, 2000))\n      .catch((error) => console.error('Error:', error));\n  }\n\n  async function checkCrawlStatus(task_id, unique_id) {\n    console.log(\"Checking Crawl Status\")\n    console.log(task_id, unique_id)\n    const data = JSON.stringify({\n      method: 'GET', \n      task_id: task_id, \n      unique_id: unique_id\n    })\n    // Making a request to server to ask status of crawling job\n    const response = await fetch('api/crawl/', \n    {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },  \n        body: data  \n      }, \n      data\n      )\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        if (data.data) {\n          clearInterval(statusInterval)\n          setData(data.data)\n        } else if (data.error) {\n          clearInterval(statusInterval)\n          console.log(data.error)\n        } else if (data.status) {\n          setCrawlingStatus(data.status)\n        }\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => startCrawl()}>Click Me!</button>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/TylerWinstead/Desktop/code/Dog-Ear_v2/client/src/utils/api.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":37,"nodeType":"32","messageId":"33","endLine":1,"endColumn":43},{"ruleId":"30","severity":1,"message":"34","line":6,"column":15,"nodeType":"32","messageId":"33","endLine":6,"endColumn":21},{"ruleId":"30","severity":1,"message":"35","line":7,"column":10,"nodeType":"32","messageId":"33","endLine":7,"endColumn":24},{"ruleId":"30","severity":1,"message":"36","line":8,"column":10,"nodeType":"32","messageId":"33","endLine":8,"endColumn":14},{"ruleId":"30","severity":1,"message":"37","line":9,"column":10,"nodeType":"32","messageId":"33","endLine":9,"endColumn":16},{"ruleId":"30","severity":1,"message":"38","line":10,"column":10,"nodeType":"32","messageId":"33","endLine":10,"endColumn":18},{"ruleId":"30","severity":1,"message":"39","line":23,"column":11,"nodeType":"32","messageId":"33","endLine":23,"endColumn":19},{"ruleId":"30","severity":1,"message":"39","line":51,"column":11,"nodeType":"32","messageId":"33","endLine":51,"endColumn":19},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'setUrl' is assigned a value but never used.","'crawlingStatus' is assigned a value but never used.","'data' is assigned a value but never used.","'taskID' is assigned a value but never used.","'uniqueID' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]